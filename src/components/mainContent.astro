---
---
<section class="hero-section">
  <div class="container">
    <h2>Simulador de Préstamos</h2>
    <p class="subtitle">
      Completa el formulario para obtener una cotización instantánea de tu préstamo personal. Fácil, rápido y transparente.
    </p>

    <form id="loan-form">
      <label for="amount">Monto:</label>
      <input type="number" id="amount" placeholder="Ej: 10000" required />

      <label for="currency">Moneda:</label>
      <select id="currency">
        <option value="ARS">Pesos Argentinos (ARS)</option>
        <option value="USD">Dólares (USD)</option>
      </select>

      <label for="installments">Cuotas:</label>
      <select id="installments">
        <option value="1">1 cuota</option>
        <option value="2">2 cuotas</option>
        <option value="3">3 cuotas</option>
        <option value="4">4 cuotas</option>
      </select>

      <label for="payment-value">Valor a pagar por cuota:</label>
      <p id="payment-value" class="payment-display"></p>

      <div class="button-group">
        <button type="submit">Calcular</button>
        <a href="#" id="whatsapp-button" class="whatsapp-button" target="_blank">
            <i class="fa-brands fa-whatsapp"></i>
        <span>Solcitar Préstamo</span>
  </a>
      </div>
    </form>

    <div id="result"></div>
  </div>
</section>
<style>
    /* 4. Estilos del Formulario */
.hero-section {
    background-color: var(--secondary-color);
    padding: 4rem 1rem;
}
form {
  background: white;
  padding: 1.2rem;
  border-radius: var(--border-radius);
  margin-top: 1rem;
  border: 1px solid var(--border-color);
  box-shadow: 0 4px 6px rgba(0,0,0,0.05);
}

label {
  display: block;
  margin-bottom: 0.3rem;
  font-weight: 700;
  font-size: 0.8rem;
}

input, select, .payment-display {
  width: 100%;
  padding: 0.6rem;
  margin-bottom: 0.8rem;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font-size: 0.9rem;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

input:focus, select:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.2);
}

/* Estilos para el nuevo contenedor de botones */
.button-group {
  display: flex;
  gap: 0.5rem;
  margin-top: 0.8rem;
}

/* Estilos generales para ambos botones */
.button-group button, .button-group .whatsapp-button {
  flex: 1;
  padding: 0.6rem;
  border: none;
  border-radius: var(--border-radius);
  cursor: pointer;
  font-size: 0.85rem;
  font-weight: 700;
  text-decoration: none;
  text-align: center;
  transition: background-color 0.2s ease;
}

/* Estilos específicos para cada botón */
button {
  background: var(--accent-color);
  color: white;
}

button:hover {
  background: #0056b3;
}

.whatsapp-button {
  background-color: #25d366;
  color: white;
  /* Usamos Flexbox para alinear el ícono y el texto */
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

.whatsapp-button:hover {
  background-color: #128c7e;
}

/* 5. Estilos para los Resultados */
#result {
  margin-top: 2rem;
  background: white;
  padding: 1.5rem;
  border-radius: var(--border-radius);
  border: 1px solid var(--border-color);
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

#result.visible {
    opacity: 1;
    transform: translateY(0);
}
</style>
<script>
    document.addEventListener('DOMContentLoaded', () => {
    // Especificamos los tipos de elementos para evitar los avisos
    const form = document.getElementById('loan-form') as HTMLFormElement;
    const amountInput = document.getElementById('amount') as HTMLInputElement;
    const installmentsInput = document.getElementById('installments') as HTMLSelectElement;
    const paymentValueParagraph = document.getElementById('payment-value') as HTMLParagraphElement;
    const resultDiv = document.getElementById('result') as HTMLDivElement;
    const whatsappButton = document.getElementById('whatsapp-button') as HTMLAnchorElement;

    // Verificamos que los elementos existan. Esto es una buena práctica.
    if (!form || !amountInput || !installmentsInput || !paymentValueParagraph || !whatsappButton) {
        console.error('No se encontraron todos los elementos del formulario.');
        return; 
    }

    form.addEventListener('submit', (e) => {
        e.preventDefault();

        // El linter ya no se quejará de la propiedad '.value'
        const monto = parseFloat(amountInput.value);
        const moneda = (document.getElementById('currency') as HTMLSelectElement).value;
        const cuotas = parseInt(installmentsInput.value);
        let totalInteres = 0;

        if (isNaN(monto) || isNaN(cuotas) || monto <= 0 || cuotas <= 0) {
            alert('Por favor, introduce valores válidos para el monto y las cuotas.');
            return;
        }

        switch (cuotas) {
            case 1:
                totalInteres = monto * 0.25;
                break;
            case 2:
                totalInteres = monto * 0.50;
                break;
            case 3:
                totalInteres = monto * 0.75;
                break;
            case 4:
                totalInteres = monto * 1.00;
                break;
            default:
                totalInteres = 0;
                break;
        }

        const totalPagar = monto + totalInteres;
        const pagoMensual = totalPagar / cuotas;

        paymentValueParagraph.textContent = `$${pagoMensual.toFixed(2)}`;

        const message = `Hola, me gustaría solicitar un préstamo de $${monto} ${moneda} en ${cuotas} cuotas.`;
        const whatsappUrl = `https://wa.me/5493518759486?text=${encodeURIComponent(message)}`;
        whatsappButton.href = whatsappUrl;

        resultDiv.innerHTML = `
            <h3>Resumen de tu préstamo:</h3>
            <p><strong>Monto Solicitado:</strong> $${monto.toFixed(2)}</p>
            <p><strong>Pago Mensual:</strong> $${pagoMensual.toFixed(2)}</p>
            <p><strong>Total a Pagar:</strong> $${totalPagar.toFixed(2)}</p>
            <p><strong>Total de Intereses:</strong> $${totalInteres.toFixed(2)}</p>
        `;
        resultDiv.classList.add('visible');
    });
});
</script>
